<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
<!--    <context-param>-->
<!--        <param-name>contextConfigLocation</param-name>-->
<!--        <param-value>/WEB-INF/applicationContext.xml</param-value>-->
<!--    </context-param>-->
<!--    <listener>-->
<!--        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
<!--    </listener>-->

    <display-name>SpringMVC</display-name>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 编码过滤器必须要配在所有的servlet之前 因为有缓存 必须配置在第一个-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>  <!-- /* 代表过滤所有的请求 -->
    </filter-mapping>

    <!--
    配置过滤器 HiddenHttpMethodFilter
    会根据几个条件对POST请求作出转换
    条件：
    1、必须是POST
    2、参数_method
    1）若不符合条件(没有_method)
    直接就是POST
    2）若符合条件：
    经过转换之后，真正的请求方式，其实就是_method的值
    -->

    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern> <!-- /* 代表过滤所有的请求 -->
    </filter-mapping>

    <!-- springMVC核心控制器 -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 设置springMVC配置文件的位置和名称 -->
        <init-param>
            <param-name>contextConfigLocation</param-name> <!-- 上下文配置路径 配置springMVC的位置和名称 -->
            <param-value>classpath:dispatcher-servlet.xml</param-value> <!--直接在conf中找配志日志文件 需要将conf make as source director -->
        </init-param>
        <!-- 设置servlet的加载时间
           默认在第一次访问时加载
           若设置此标签 则可以将servlet的启动时间提前到项目启动时
        -->
        <load-on-startup>1</load-on-startup> <!-- 正整数才有效果 值越小 优先级越高 -->
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
<!--        <url-pattern>*.form</url-pattern>-->
        <url-pattern>/</url-pattern>  <!-- 不用/* 可以自动的把访问jsp的页面过滤掉 -->
    </servlet-mapping>


<!--    day05 整合SS-->
    <listener>
        <listener-class>com.matrix.springmvc.day05.SS.matrix.listener.SpringListener</listener-class>
    </listener>

</web-app>