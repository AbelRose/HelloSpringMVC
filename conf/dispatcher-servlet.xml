<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描组件 将加上@Controller 的类作为dispatcher 的控制层-->
<!--day01    <context:component-scan base-package="com.matrix.springmvc.day01"></context:component-scan>-->
<!--day02    <context:component-scan base-package="com.matrix.springmvc.day03.controller"></context:component-scan>-->
<!--day03    <context:component-scan base-package="com.matrix.springmvc.day03.crud"></context:component-scan>-->
    <context:component-scan base-package="com.matrix.springmvc.day04"></context:component-scan>

    <!-- 配置视图解析器 (id="viewResolver"加不加都可以)-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!-- 转发视图 -->
        <!-- 前缀 + 视图名称 + 后缀 完成跳转 -->
        <property name="prefix" value="/WEB-INF/view/"></property>
        <property name="suffix" value=".jsp"></property>
<!--        <property name="order" value="1"></property> &lt;!&ndash; 配置优先级 越小越NB&ndash;&gt;-->
    </bean>

    <!-- 加入静态资源css js等 -->
    <!--
		配置Tomcat中默认的servlet，DefaultServlet
		注意：当DefaultServlet所设置的<url-pattern>的值和开发人员所配置的servlet的<url-pattern>相同，以开发人员所配置的servlet优先
		作用：当客户端发送请求，由于DefaultServlet所设置的<url-pattern>的值和开发人员所配置DispatcherServlet的<url-pattern>都是/
			因此先通过DispatcherServlet处理请求，找该请求是否有相对应的处理器，有则处理，无则交给DefaultServlet处理
	 -->
    <mvc:default-servlet-handler/>  <!-- 1. 交给tomcat中默认的servlet去处理 -->
    <!-- mvc驱动  和 mvc:default-servlet-handler搭配使用-->
    <mvc:annotation-driven/> <!-- 2. 驱动 -->

    <!--
		处理文件，将客户端上传的File文件，处理为MultipartFile
		注意：文件解析器的bean中id必须设置为multipartResolver
	 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置文件解析的编码，注意：一定要和页面的pageEncoding保持一致 -->
        <property name="defaultEncoding" value="UTF-8"></property>
        <!-- 设置最大上传文件大小 单位是字节 必须是自己配置-->
        <property name="maxUploadSize" value="88888888"></property>
    </bean>

    <mvc:interceptors>
        <!-- 默认拦截所有请求 -->
        <bean class="com.matrix.springmvc.day04.interceptor.FirstInterceptor"></bean>
        <bean class="com.matrix.springmvc.day04.interceptor.SecondInterceptor"></bean>
        <!-- 此方式要求拦截器类上必须加注解@Component -->
        <!-- <ref bean="firstInterceptor"/> -->

        <!-- 设置自定义拦截方式 -->
        <!-- <mvc:interceptor>
            <bean></bean>
            <mvc:mapping path=""/>
            <mvc:exclude-mapping path=""/>
        </mvc:interceptor> -->

    </mvc:interceptors>

<!--day05    处理异常-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.NullPointerException">error</prop>
            </props>
        </property>
    </bean>

</beans>